#!/bin/sh

set -e

CDPATH="" cd -- "$(dirname -- "$(dirname -- "$0")")"

if [ -z "$1" ]; then
  echo first and only argument should be a version >&2
  exit 1
fi

readonly input_version="$1"
readonly prerel="$(script/semver get prerel "$input_version")"
if [ -z "$prerel" ]; then
  readonly version="$(script/semver bump release "$input_version")"
else
  readonly version="$(script/semver bump prerel "$prerel" "$input_version")"
fi
readonly major="$(script/semver get major "$version")"
readonly orig_ref="$(git rev-parse --abbrev-ref HEAD)"
readonly release_branch="v$major"
readonly commit="$(git rev-parse HEAD)"

if [ "$orig_ref" != "$release_branch" ] && [ "$orig_ref" != "main" ]; then
  echo you must release from either main or the release branch >&2
  exit 1
fi

if [ "$orig_ref" != "$release_branch" ]; then
  git switch "$release_branch" --quiet
  trap 'git switch $orig_ref --quiet' EXIT
fi

git merge --ff-only "$commit" --quiet
git push origin "$release_branch"

release_flags=" \
  --repo WillAbides/benchdiff-action \
  --tag_name "v$version" \
  --target_commitish '$release_branch' \
  --name "v$version" \
  --format '{{.html_url}}' \
"

if [ -n "$prerel" ]; then
  release_flags="$release_flags --prerelease"
fi

script/octo repos create-release "$release_flags"
